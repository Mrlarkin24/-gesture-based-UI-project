using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.SceneManagement;   using LockingPolicy = Thalmic.Myo.LockingPolicy; using Pose = Thalmic.Myo.Pose; using UnlockType = Thalmic.Myo.UnlockType; using VibrationType = Thalmic.Myo.VibrationType;  public class MenuControls : MonoBehaviour       {      public Rigidbody2D rb;     public float moveSpeed = 10.0f;     public GameObject myo = null;     public Vector2 moveV;      private Pose _lastPose = Pose.Unknown;      /*void Start()
    {
        rb = GetComponent<Rigidbody2D>();
    }*/

    void Update()     {         Scene currentScene = SceneManager.GetActiveScene();         string sceneName = currentScene.name;         // Access the ThalmicMyo component attached to the Myo game object.         ThalmicMyo thalmicMyo = myo.GetComponent<ThalmicMyo>();          //Vector2 moveInput = new Vector2(Input.GetAxis("Horizontal"), Input.GetAxis("Vertical"));         //moveV = moveInput * moveSpeed;         //bool updateReference = false;          // Check if the pose has changed since last update.         // The ThalmicMyo component of a Myo game object has a pose property that is set to the         // currently detected pose (e.g. Pose.Fist for the user making a fist). If no pose is currently         // detected, pose will be set to Pose.Rest. If pose detection is unavailable, e.g. because Myo         // is not on a user's arm, pose will be set to Pose.Unknown.         if (thalmicMyo.pose != _lastPose)         {             _lastPose = thalmicMyo.pose;              if (sceneName == "Menu")             {                  // Vibrate the Myo armband when a fist is made.                 if (thalmicMyo.pose == Pose.DoubleTap)                 {                     Debug.Log("Menu fist Working");                     thalmicMyo.Vibrate(VibrationType.Medium);                     LoadScene("SampleScene");                                          //playGame();                     ExtendUnlockAndNotifyUserAction(thalmicMyo);                      // Change material when wave in, wave out or double tap poses are made.                 }                 else if (thalmicMyo.pose == Pose.WaveIn)                 {                     Debug.Log("Menu wave in Working");                     LoadScene("Options");                     //LoadOptions();                     ExtendUnlockAndNotifyUserAction(thalmicMyo);                 }                 else if (thalmicMyo.pose == Pose.FingersSpread)                 {                     Debug.Log("Menu FrigerSpread works");                     QuitGame();                     ExtendUnlockAndNotifyUserAction(thalmicMyo);                 }             }             else if(sceneName == "SampleScene")             {                 Vector2 moveInput = new Vector2(Input.GetAxis("Horizontal"), Input.GetAxis("Vertical"));                  moveInput = new Vector2(-(myo.transform.forward.x), 0);                  if (thalmicMyo.pose == Pose.WaveIn)                 {                     Debug.Log("level1 Moving Left");                     //moveInput = new Vector2(-moveSpeed, 0);                     //rb.velocity = new Vector2(-moveSpeed, 0f);                     //updateReference = true;                     thalmicMyo.Vibrate(VibrationType.Medium);                      ExtendUnlockAndNotifyUserAction(thalmicMyo);                      // Change material when wave in, wave out or double tap poses are made.                 }                 else if (thalmicMyo.pose == Pose.WaveOut)                 {                     Debug.Log("level1 Moving Right");                     //moveInput = new Vector2(moveSpeed, 0);                     //rb.velocity = new Vector2(moveSpeed, 0f);                      ExtendUnlockAndNotifyUserAction(thalmicMyo);                 }                 else if (thalmicMyo.pose == Pose.Fist)                 {                     Debug.Log("level1 Shooting");                                          ExtendUnlockAndNotifyUserAction(thalmicMyo);                 }                 else if (thalmicMyo.pose == Pose.DoubleTap)                 {                     Debug.Log("Move to Menu");                     LoadScene("Menu");                     ExtendUnlockAndNotifyUserAction(thalmicMyo);                 }                 moveV = moveInput * moveSpeed;             }             else if (sceneName == "Options")             {                 if (thalmicMyo.pose == Pose.FingersSpread)                 {                     Debug.Log("Options Working");                     QuitGame();                     ExtendUnlockAndNotifyUserAction(thalmicMyo);                 }                 else if (thalmicMyo.pose == Pose.Fist)                 {                     Debug.Log("level1 Moving Right");                     LoadScene("Menu");                     ExtendUnlockAndNotifyUserAction(thalmicMyo);                 }             }         }     }      void ExtendUnlockAndNotifyUserAction(ThalmicMyo myo)     {         ThalmicHub hub = ThalmicHub.instance;          if (hub.lockingPolicy == LockingPolicy.Standard)         {             myo.Unlock(UnlockType.Timed);         }          myo.NotifyUserAction();     }      void FixedUpdate()
    {
        rb.MovePosition(rb.position + moveV * Time.fixedDeltaTime);        
    }      void LoadScene(string SceneName)     {         SceneManager.LoadSceneAsync(SceneName);         rb = GetComponent<Rigidbody2D>();     }      /*void playGame()     {         SceneManager.LoadSceneAsync("SampleScene");     }      void LoadOptions()     {         SceneManager.LoadSceneAsync("Options");     }     void LoadMainMenu()     {         SceneManager.LoadSceneAsync("Options");     }*/      void QuitGame()      {         Debug.Log("Quitting Game");         Application.Quit();     } }  